/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.xtext.tcc.mydsl.myDsl.Atributo;
import org.xtext.tcc.mydsl.myDsl.Entidade;
import org.xtext.tcc.mydsl.myDsl.Entidades;
import org.xtext.tcc.mydsl.myDsl.Operacao;
import org.xtext.tcc.mydsl.myDsl.OperacaoCascada;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    Iterable<Entidades> _filter = Iterables.<Entidades>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), Entidades.class);
    for (final Entidades e : _filter) {
      String _string = StringExtensions.toFirstUpper(e.getEntidade().getNomeEntidade().getNome()).toString();
      String _plus = (_string + ".java");
      fsa.generateFile(_plus, this.compile(e.getEntidade()));
    }
  }
  
  public CharSequence compile(final Entidade entidade) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    String _nome = entidade.getPackage().getNome();
    _builder.append(_nome);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("import javax.persistence.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("public class ");
    String _firstUpper = StringExtensions.toFirstUpper(entidade.getNomeEntidade().getNome());
    _builder.append(_firstUpper);
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@GeneratedValue(strategy=GenerationType.IDENTITY)");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _compileAtributos = this.compileAtributos(entidade.getAtributos().getAtributo());
    _builder.append(_compileAtributos, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Atributo> _atributoMais = entidade.getAtributos().getAtributoMais();
      for(final Atributo a : _atributoMais) {
        _builder.append("\t");
        CharSequence _compileAtributos_1 = this.compileAtributos(a);
        _builder.append(_compileAtributos_1, "\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _compileGetersSeters = this.compileGetersSeters(entidade.getAtributos().getAtributo());
    _builder.append(_compileGetersSeters, "\t");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    {
      EList<Atributo> _atributoMais_1 = entidade.getAtributos().getAtributoMais();
      for(final Atributo a_1 : _atributoMais_1) {
        _builder.append("\t");
        CharSequence _compileGetersSeters_1 = this.compileGetersSeters(a_1);
        _builder.append(_compileGetersSeters_1, "\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compileAtributos(final Atributo atributo) {
    StringConcatenation _builder = new StringConcatenation();
    {
      boolean _equals = atributo.getAssociacao().getAssociacao().equals("");
      boolean _not = (!_equals);
      if (_not) {
        {
          Operacao _operacao = atributo.getOperacao();
          boolean _tripleEquals = (_operacao == null);
          if (_tripleEquals) {
            _builder.append("@");
            String _associacao = atributo.getAssociacao().getAssociacao();
            _builder.append(_associacao);
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("@");
            String _associacao_1 = atributo.getAssociacao().getAssociacao();
            _builder.append(_associacao_1);
            _builder.append("(cascade = {CascadeType.");
            String _operacao_1 = atributo.getOperacao().getOpCascada().getOperacao();
            _builder.append(_operacao_1);
            {
              EList<OperacaoCascada> _opCascadaMais = atributo.getOperacao().getOpCascadaMais();
              for(final OperacaoCascada o : _opCascadaMais) {
                _builder.append(", CascadeType.");
                String _operacao_2 = o.getOperacao();
                _builder.append(_operacao_2);
              }
            }
            _builder.append("})");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    {
      String _tipoPrimitivo = atributo.getAtributoTipo().getTipoPrimitivo();
      boolean _tripleNotEquals = (_tipoPrimitivo != null);
      if (_tripleNotEquals) {
        _builder.append("private ");
        String _firstUpper = StringExtensions.toFirstUpper(atributo.getAtributoTipo().getTipoPrimitivo());
        _builder.append(_firstUpper);
        _builder.append(" ");
        String _firstLower = StringExtensions.toFirstLower(atributo.getNomeAtributo().getNome());
        _builder.append(_firstLower);
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      } else {
        String _tipoColecao = atributo.getAtributoTipo().getTipoColecao();
        boolean _tripleNotEquals_1 = (_tipoColecao != null);
        if (_tripleNotEquals_1) {
          _builder.append("private ");
          String _firstUpper_1 = StringExtensions.toFirstUpper(atributo.getAtributoTipo().getTipoColecao());
          _builder.append(_firstUpper_1);
          _builder.append(" ");
          String _firstLower_1 = StringExtensions.toFirstLower(atributo.getNomeAtributo().getNome());
          _builder.append(_firstLower_1);
          _builder.append(";");
          _builder.newLineIfNotEmpty();
        } else {
          _builder.append("private ");
          String _firstUpper_2 = StringExtensions.toFirstUpper(atributo.getAtributoTipo().getTipoObjeto());
          _builder.append(_firstUpper_2);
          _builder.append(" ");
          String _firstLower_2 = StringExtensions.toFirstLower(atributo.getNomeAtributo().getNome());
          _builder.append(_firstLower_2);
          _builder.append(";");
          _builder.newLineIfNotEmpty();
        }
      }
    }
    return _builder;
  }
  
  public CharSequence compileGetersSeters(final Atributo atributo) {
    StringConcatenation _builder = new StringConcatenation();
    {
      String _tipoPrimitivo = atributo.getAtributoTipo().getTipoPrimitivo();
      boolean _tripleNotEquals = (_tipoPrimitivo != null);
      if (_tripleNotEquals) {
        _builder.append("public ");
        String _tipoPrimitivo_1 = atributo.getAtributoTipo().getTipoPrimitivo();
        _builder.append(_tipoPrimitivo_1);
        _builder.append(" get");
        String _firstUpper = StringExtensions.toFirstUpper(atributo.getNomeAtributo().getNome());
        _builder.append(_firstUpper);
        _builder.append("(){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("return ");
        String _nome = atributo.getNomeAtributo().getNome();
        _builder.append(_nome, "\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
        _builder.append("public void set");
        String _firstUpper_1 = StringExtensions.toFirstUpper(atributo.getNomeAtributo().getNome());
        _builder.append(_firstUpper_1);
        _builder.append("(");
        String _tipoPrimitivo_2 = atributo.getAtributoTipo().getTipoPrimitivo();
        _builder.append(_tipoPrimitivo_2);
        _builder.append(" ");
        String _nome_1 = atributo.getNomeAtributo().getNome();
        _builder.append(_nome_1);
        _builder.append("){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("this.");
        String _nome_2 = atributo.getNomeAtributo().getNome();
        _builder.append(_nome_2, "\t");
        _builder.append(" = ");
        String _nome_3 = atributo.getNomeAtributo().getNome();
        _builder.append(_nome_3, "\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("}");
        _builder.newLine();
      } else {
        String _tipoColecao = atributo.getAtributoTipo().getTipoColecao();
        boolean _tripleNotEquals_1 = (_tipoColecao != null);
        if (_tripleNotEquals_1) {
          _builder.append("public ");
          String _tipoColecao_1 = atributo.getAtributoTipo().getTipoColecao();
          _builder.append(_tipoColecao_1);
          _builder.append(" get");
          String _firstUpper_2 = StringExtensions.toFirstUpper(atributo.getNomeAtributo().getNome());
          _builder.append(_firstUpper_2);
          _builder.append("(){");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("return ");
          String _nome_4 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_4, "\t");
          _builder.append(";");
          _builder.newLineIfNotEmpty();
          _builder.append("}");
          _builder.newLine();
          _builder.newLine();
          _builder.append("public void set ");
          String _firstUpper_3 = StringExtensions.toFirstUpper(atributo.getNomeAtributo().getNome());
          _builder.append(_firstUpper_3);
          _builder.append("(");
          String _tipoColecao_2 = atributo.getAtributoTipo().getTipoColecao();
          _builder.append(_tipoColecao_2);
          _builder.append(" ");
          String _nome_5 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_5);
          _builder.append("){");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("this.");
          String _nome_6 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_6, "\t");
          _builder.append(" = ");
          String _nome_7 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_7, "\t");
          _builder.append(";");
          _builder.newLineIfNotEmpty();
          _builder.append("}");
          _builder.newLine();
        } else {
          _builder.append("public ");
          String _tipoObjeto = atributo.getAtributoTipo().getTipoObjeto();
          _builder.append(_tipoObjeto);
          _builder.append(" get");
          String _firstUpper_4 = StringExtensions.toFirstUpper(atributo.getNomeAtributo().getNome());
          _builder.append(_firstUpper_4);
          _builder.append("(){");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("return ");
          String _nome_8 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_8, "\t");
          _builder.append(";");
          _builder.newLineIfNotEmpty();
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t\t\t");
          _builder.newLine();
          _builder.append("public void set ");
          String _firstUpper_5 = StringExtensions.toFirstUpper(atributo.getNomeAtributo().getNome());
          _builder.append(_firstUpper_5);
          _builder.append("(");
          String _tipoObjeto_1 = atributo.getAtributoTipo().getTipoObjeto();
          _builder.append(_tipoObjeto_1);
          _builder.append(" ");
          String _nome_9 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_9);
          _builder.append("){");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("this.");
          String _nome_10 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_10, "\t");
          _builder.append(" = ");
          String _nome_11 = atributo.getNomeAtributo().getNome();
          _builder.append(_nome_11, "\t");
          _builder.append(";");
          _builder.newLineIfNotEmpty();
          _builder.append("}");
          _builder.newLine();
        }
      }
    }
    return _builder;
  }
}
