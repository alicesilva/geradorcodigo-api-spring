/*
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.tcc.mydsl.myDsl.Entidade
import org.eclipse.emf.common.util.EList
import org.xtext.tcc.mydsl.myDsl.Atributo

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {
		
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		//for(e: resource.allContents.toIterable.filter(Entidade)){
			//fsa.generateFile(e.nomeEntidades.id.toFirstUpper.toString + ".java", e.compile)
		//}
	}
	
	//def compile(Entidade entidade)'''
		//package «entidade.package.id»;
		//import javax.persistence.*;
		
		//@Entity
		//public class «entidade.nomeEntidades.id.toFirstUpper» {
			
			//«IF entidade.chavePrimaria.id.equalsIgnoreCase("id")»
				//@Id
				//@GeneratedValue(strategy=GenerationType.IDENTITY)
				//private Integer id;
			//«ENDIF»
			
			//«compileAtributos(entidade.chavePrimaria.id, entidade.atributos)»
			
			//«compileGetersSeters(entidade.atributos)»
			
		//}
	//'''
		
	def compileAtributos(String chavePrimaria, EList<Atributo> atributos)'''
		«FOR a: atributos»
			«IF a.associacao !== null»
				«IF a.operacao === null»
					@«a.associacao.associacao»
				«ELSE»
				     @«a.associacao.associacao»(cascade = CascadeType.«a.operacao.opCascada»)
				«ENDIF»
			«ENDIF»
			«IF a.atributoTipo.tipoP !== null»
				private «a.atributoTipo.tipoP.toFirstUpper» «a.atributoNome.id.toFirstLower»;
			«ELSE»
				private «a.atributoTipo.tipoE.toFirstUpper» «a.atributoNome.id.toFirstLower»;
			«ENDIF»
			
		«ENDFOR»
	'''
	
	def compileGetersSeters(EList<Atributo> atributos) '''
		«FOR a: atributos»
			«IF a.atributoTipo.tipoP !== null»
				public «a.atributoTipo.tipoP» get«a.atributoNome.id.toFirstUpper»(){
					return «a.atributoNome.id»;
				}
				
				public void set«a.atributoNome.id.toFirstUpper»(«a.atributoTipo.tipoP» «a.atributoNome.id»){
					this.«a.atributoNome.id» = «a.atributoNome.id»;
				}
			«ELSE»
				public «a.atributoTipo.tipoE» get«a.atributoNome.id.toFirstUpper»(){
					return «a.atributoNome.id»;
				}
				
				public void set «a.atributoNome.id.toFirstUpper»(«a.atributoTipo.tipoP» «a.atributoNome.id»){
					this.«a.atributoNome.id» = «a.atributoNome.id»;
				}
			«ENDIF»
		«ENDFOR»
	'''
		
}
