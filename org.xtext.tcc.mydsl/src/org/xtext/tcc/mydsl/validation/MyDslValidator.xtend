/*
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.validation

import org.eclipse.xtext.validation.Check
import org.xtext.tcc.mydsl.myDsl.Api
import org.xtext.tcc.mydsl.myDsl.Entidade

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MyDslValidator extends AbstractMyDslValidator {

	EntidadeValidator entidadeValidator = new EntidadeValidator();

//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	@Check
	def check(Api api) {
		api.nomeApi.nome = api.nomeApi.nome.substring(1, api.nomeApi.nome.length - 1);
		for (e : api.entidades) {
			e.nomeEntidade.nome = e.nomeEntidade.nome.substring(1, e.nomeEntidade.nome.length - 1);
			e.chavePrimaria.nome = e.chavePrimaria.nome.substring(1, e.chavePrimaria.nome.length - 1);
			e.package.nome = e.package.nome.substring(1, e.package.nome.length - 1);

			for (a : e.atributos) {
				a.nomeAtributo.nome = a.nomeAtributo.nome.substring(1, a.nomeAtributo.nome.length - 1);
				if (a.atributoTipo.tipoP !== null) {
					a.atributoTipo.tipoP = a.atributoTipo.tipoP.substring(1, a.atributoTipo.tipoP.length - 1);
				} else {
					a.atributoTipo.tipoE = a.atributoTipo.tipoE.substring(1, a.atributoTipo.tipoE.length - 1);
				}

				a.associacao.associacao = a.associacao.associacao.substring(1, a.associacao.associacao.length - 1);
				a.operacao.opCascada = a.operacao.opCascada.substring(1, a.operacao.opCascada.length - 1);
			}
		}
		
		checkChavePrimaria(api);
		checkNomesEntidades(api);
		checkTipoAtributos(api);
	}

	def checkNomesEntidades(Api api) {
		if (entidadeValidator.checkNomeEntidades(api) !== null) {
			var Exception erro = entidadeValidator.checkNomeEntidades(api);
			error(erro.erro, erro.feature);
		}
	}

	
	def checkChavePrimaria(Api api) {
		if (entidadeValidator.checkChavePrimaria(api) !== null) {
			var Exception erro = entidadeValidator.checkChavePrimaria(api);
			error(erro.erro, erro.feature);
		}
	}

	def checkTipoAtributos(Api api) {
		if (entidadeValidator.checkTipoAtributo(api) !== null) {
			var Exception erro = entidadeValidator.checkTipoAtributo(api);
			error(erro.erro, erro.feature);
		}
	}
	
	def verificaTamanho(String palavra){
		return palavra.length > 0
	}
}
