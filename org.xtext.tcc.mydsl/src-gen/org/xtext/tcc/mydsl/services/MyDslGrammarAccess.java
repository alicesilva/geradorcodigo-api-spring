/*
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Model");
		private final Assignment cGreetingsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cGreetingsGreetingParserRuleCall_0 = (RuleCall)cGreetingsAssignment.eContents().get(0);
		
		//Model:
		//	greetings+=Greeting*;
		@Override public ParserRule getRule() { return rule; }
		
		//greetings+=Greeting*
		public Assignment getGreetingsAssignment() { return cGreetingsAssignment; }
		
		//Greeting
		public RuleCall getGreetingsGreetingParserRuleCall_0() { return cGreetingsGreetingParserRuleCall_0; }
	}
	public class GreetingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Greeting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cApiAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cApiApiParserRuleCall_1_0 = (RuleCall)cApiAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Greeting:
		//	'{' api=Api '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' api=Api '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//api=Api
		public Assignment getApiAssignment_1() { return cApiAssignment_1; }
		
		//Api
		public RuleCall getApiApiParserRuleCall_1_0() { return cApiApiParserRuleCall_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class ApiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Api");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNomeApiAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNomeApiApiNomeParserRuleCall_0_0 = (RuleCall)cNomeApiAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntidadesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntidadesEntidadeParserRuleCall_3_0 = (RuleCall)cEntidadesAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Api:
		//	nomeApi=ApiNome ':' '[' entidades+=Entidade+ ']';
		@Override public ParserRule getRule() { return rule; }
		
		//nomeApi=ApiNome ':' '[' entidades+=Entidade+ ']'
		public Group getGroup() { return cGroup; }
		
		//nomeApi=ApiNome
		public Assignment getNomeApiAssignment_0() { return cNomeApiAssignment_0; }
		
		//ApiNome
		public RuleCall getNomeApiApiNomeParserRuleCall_0_0() { return cNomeApiApiNomeParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//entidades+=Entidade+
		public Assignment getEntidadesAssignment_3() { return cEntidadesAssignment_3; }
		
		//Entidade
		public RuleCall getEntidadesEntidadeParserRuleCall_3_0() { return cEntidadesEntidadeParserRuleCall_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class ApiNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.ApiNome");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//ApiNome:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class EntidadeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Entidade");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNomeEntidadeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNomeEntidadeEntidadeNomeParserRuleCall_1_0 = (RuleCall)cNomeEntidadeAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAtributoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAtributoAtributoParserRuleCall_4_0 = (RuleCall)cAtributoAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Entidade:
		//	'{' nomeEntidade=EntidadeNome ':' '[' atributo+=Atributo+ ']' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' nomeEntidade=EntidadeNome ':' '[' atributo+=Atributo+ ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//nomeEntidade=EntidadeNome
		public Assignment getNomeEntidadeAssignment_1() { return cNomeEntidadeAssignment_1; }
		
		//EntidadeNome
		public RuleCall getNomeEntidadeEntidadeNomeParserRuleCall_1_0() { return cNomeEntidadeEntidadeNomeParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//atributo+=Atributo+
		public Assignment getAtributoAssignment_4() { return cAtributoAssignment_4; }
		
		//Atributo
		public RuleCall getAtributoAtributoParserRuleCall_4_0() { return cAtributoAtributoParserRuleCall_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EntidadeNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.EntidadeNome");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//EntidadeNome:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class AtributoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Atributo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNomeAtributoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAtributoNomeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAtributoNomeAtributoNomeParserRuleCall_2_0 = (RuleCall)cAtributoNomeAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTipoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAtributoTipoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAtributoTipoAtributoTipoParserRuleCall_5_0 = (RuleCall)cAtributoTipoAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cAssociaOKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAssociacaoNomeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAssociacaoNomeAssociacaoNomeParserRuleCall_8_0 = (RuleCall)cAssociacaoNomeAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cOperaOEmCascataKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOperacaoAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOperacaoOperacaoParserRuleCall_11_0 = (RuleCall)cOperacaoAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cMappedByKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cNomeEntidadeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cNomeEntidadeEntidadeNomeParserRuleCall_14_0 = (RuleCall)cNomeEntidadeAssignment_14.eContents().get(0);
		private final Keyword cCommaKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cJoinTableNomeKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cTabelaNomeAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cTabelaNomeTabelaNomeParserRuleCall_17_0 = (RuleCall)cTabelaNomeAssignment_17.eContents().get(0);
		private final Keyword cCommaKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cJoinColumnsNomeKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cColunaNomeAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cColunaNomeColunaNomeParserRuleCall_20_0 = (RuleCall)cColunaNomeAssignment_20.eContents().get(0);
		private final Keyword cCommaKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cInverseJoinColumnsNomeKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Assignment cColunaNomeInverseAssignment_23 = (Assignment)cGroup.eContents().get(23);
		private final RuleCall cColunaNomeInverseColunaNomeParserRuleCall_23_0 = (RuleCall)cColunaNomeInverseAssignment_23.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		
		//Atributo:
		//	'{'
		//	'nome-atributo:' atributoNome=AtributoNome ','
		//	'tipo:' atributoTipo=AtributoTipo ','
		//	'associação:' associacaoNome=AssociacaoNome ','
		//	'operação em cascata:' operacao=Operacao ','
		//	'mappedBy:' nomeEntidade=EntidadeNome ','
		//	'JoinTable - nome:' tabelaNome=TabelaNome ','
		//	'joinColumns - nome:' colunaNome=ColunaNome ','
		//	'inverseJoinColumns - nome:' colunaNomeInverse=ColunaNome
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'nome-atributo:' atributoNome=AtributoNome ',' 'tipo:' atributoTipo=AtributoTipo ',' 'associação:'
		//associacaoNome=AssociacaoNome ',' 'operação em cascata:' operacao=Operacao ',' 'mappedBy:' nomeEntidade=EntidadeNome
		//',' 'JoinTable - nome:' tabelaNome=TabelaNome ',' 'joinColumns - nome:' colunaNome=ColunaNome ','
		//'inverseJoinColumns - nome:' colunaNomeInverse=ColunaNome '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'nome-atributo:'
		public Keyword getNomeAtributoKeyword_1() { return cNomeAtributoKeyword_1; }
		
		//atributoNome=AtributoNome
		public Assignment getAtributoNomeAssignment_2() { return cAtributoNomeAssignment_2; }
		
		//AtributoNome
		public RuleCall getAtributoNomeAtributoNomeParserRuleCall_2_0() { return cAtributoNomeAtributoNomeParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//'tipo:'
		public Keyword getTipoKeyword_4() { return cTipoKeyword_4; }
		
		//atributoTipo=AtributoTipo
		public Assignment getAtributoTipoAssignment_5() { return cAtributoTipoAssignment_5; }
		
		//AtributoTipo
		public RuleCall getAtributoTipoAtributoTipoParserRuleCall_5_0() { return cAtributoTipoAtributoTipoParserRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'associação:'
		public Keyword getAssociaOKeyword_7() { return cAssociaOKeyword_7; }
		
		//associacaoNome=AssociacaoNome
		public Assignment getAssociacaoNomeAssignment_8() { return cAssociacaoNomeAssignment_8; }
		
		//AssociacaoNome
		public RuleCall getAssociacaoNomeAssociacaoNomeParserRuleCall_8_0() { return cAssociacaoNomeAssociacaoNomeParserRuleCall_8_0; }
		
		//','
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//'operação em cascata:'
		public Keyword getOperaOEmCascataKeyword_10() { return cOperaOEmCascataKeyword_10; }
		
		//operacao=Operacao
		public Assignment getOperacaoAssignment_11() { return cOperacaoAssignment_11; }
		
		//Operacao
		public RuleCall getOperacaoOperacaoParserRuleCall_11_0() { return cOperacaoOperacaoParserRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//'mappedBy:'
		public Keyword getMappedByKeyword_13() { return cMappedByKeyword_13; }
		
		//nomeEntidade=EntidadeNome
		public Assignment getNomeEntidadeAssignment_14() { return cNomeEntidadeAssignment_14; }
		
		//EntidadeNome
		public RuleCall getNomeEntidadeEntidadeNomeParserRuleCall_14_0() { return cNomeEntidadeEntidadeNomeParserRuleCall_14_0; }
		
		//','
		public Keyword getCommaKeyword_15() { return cCommaKeyword_15; }
		
		//'JoinTable - nome:'
		public Keyword getJoinTableNomeKeyword_16() { return cJoinTableNomeKeyword_16; }
		
		//tabelaNome=TabelaNome
		public Assignment getTabelaNomeAssignment_17() { return cTabelaNomeAssignment_17; }
		
		//TabelaNome
		public RuleCall getTabelaNomeTabelaNomeParserRuleCall_17_0() { return cTabelaNomeTabelaNomeParserRuleCall_17_0; }
		
		//','
		public Keyword getCommaKeyword_18() { return cCommaKeyword_18; }
		
		//'joinColumns - nome:'
		public Keyword getJoinColumnsNomeKeyword_19() { return cJoinColumnsNomeKeyword_19; }
		
		//colunaNome=ColunaNome
		public Assignment getColunaNomeAssignment_20() { return cColunaNomeAssignment_20; }
		
		//ColunaNome
		public RuleCall getColunaNomeColunaNomeParserRuleCall_20_0() { return cColunaNomeColunaNomeParserRuleCall_20_0; }
		
		//','
		public Keyword getCommaKeyword_21() { return cCommaKeyword_21; }
		
		//'inverseJoinColumns - nome:'
		public Keyword getInverseJoinColumnsNomeKeyword_22() { return cInverseJoinColumnsNomeKeyword_22; }
		
		//colunaNomeInverse=ColunaNome
		public Assignment getColunaNomeInverseAssignment_23() { return cColunaNomeInverseAssignment_23; }
		
		//ColunaNome
		public RuleCall getColunaNomeInverseColunaNomeParserRuleCall_23_0() { return cColunaNomeInverseColunaNomeParserRuleCall_23_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_24() { return cRightCurlyBracketKeyword_24; }
	}
	public class ColunaNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.ColunaNome");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//ColunaNome:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class TabelaNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.TabelaNome");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//TabelaNome:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class OperacaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Operacao");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//Operacao:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class AssociacaoNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.AssociacaoNome");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//AssociacaoNome:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class AtributoNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.AtributoNome");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//AtributoNome:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class AtributoTipoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.AtributoTipo");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//AtributoTipo:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	
	
	private final ModelElements pModel;
	private final GreetingElements pGreeting;
	private final ApiElements pApi;
	private final ApiNomeElements pApiNome;
	private final EntidadeElements pEntidade;
	private final EntidadeNomeElements pEntidadeNome;
	private final AtributoElements pAtributo;
	private final ColunaNomeElements pColunaNome;
	private final TabelaNomeElements pTabelaNome;
	private final OperacaoElements pOperacao;
	private final AssociacaoNomeElements pAssociacaoNome;
	private final AtributoNomeElements pAtributoNome;
	private final AtributoTipoElements pAtributoTipo;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pGreeting = new GreetingElements();
		this.pApi = new ApiElements();
		this.pApiNome = new ApiNomeElements();
		this.pEntidade = new EntidadeElements();
		this.pEntidadeNome = new EntidadeNomeElements();
		this.pAtributo = new AtributoElements();
		this.pColunaNome = new ColunaNomeElements();
		this.pTabelaNome = new TabelaNomeElements();
		this.pOperacao = new OperacaoElements();
		this.pAssociacaoNome = new AssociacaoNomeElements();
		this.pAtributoNome = new AtributoNomeElements();
		this.pAtributoTipo = new AtributoTipoElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.tcc.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	greetings+=Greeting*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Greeting:
	//	'{' api=Api '}';
	public GreetingElements getGreetingAccess() {
		return pGreeting;
	}
	
	public ParserRule getGreetingRule() {
		return getGreetingAccess().getRule();
	}
	
	//Api:
	//	nomeApi=ApiNome ':' '[' entidades+=Entidade+ ']';
	public ApiElements getApiAccess() {
		return pApi;
	}
	
	public ParserRule getApiRule() {
		return getApiAccess().getRule();
	}
	
	//ApiNome:
	//	id=ID;
	public ApiNomeElements getApiNomeAccess() {
		return pApiNome;
	}
	
	public ParserRule getApiNomeRule() {
		return getApiNomeAccess().getRule();
	}
	
	//Entidade:
	//	'{' nomeEntidade=EntidadeNome ':' '[' atributo+=Atributo+ ']' '}';
	public EntidadeElements getEntidadeAccess() {
		return pEntidade;
	}
	
	public ParserRule getEntidadeRule() {
		return getEntidadeAccess().getRule();
	}
	
	//EntidadeNome:
	//	id=ID;
	public EntidadeNomeElements getEntidadeNomeAccess() {
		return pEntidadeNome;
	}
	
	public ParserRule getEntidadeNomeRule() {
		return getEntidadeNomeAccess().getRule();
	}
	
	//Atributo:
	//	'{'
	//	'nome-atributo:' atributoNome=AtributoNome ','
	//	'tipo:' atributoTipo=AtributoTipo ','
	//	'associação:' associacaoNome=AssociacaoNome ','
	//	'operação em cascata:' operacao=Operacao ','
	//	'mappedBy:' nomeEntidade=EntidadeNome ','
	//	'JoinTable - nome:' tabelaNome=TabelaNome ','
	//	'joinColumns - nome:' colunaNome=ColunaNome ','
	//	'inverseJoinColumns - nome:' colunaNomeInverse=ColunaNome
	//	'}';
	public AtributoElements getAtributoAccess() {
		return pAtributo;
	}
	
	public ParserRule getAtributoRule() {
		return getAtributoAccess().getRule();
	}
	
	//ColunaNome:
	//	id=ID;
	public ColunaNomeElements getColunaNomeAccess() {
		return pColunaNome;
	}
	
	public ParserRule getColunaNomeRule() {
		return getColunaNomeAccess().getRule();
	}
	
	//TabelaNome:
	//	id=ID;
	public TabelaNomeElements getTabelaNomeAccess() {
		return pTabelaNome;
	}
	
	public ParserRule getTabelaNomeRule() {
		return getTabelaNomeAccess().getRule();
	}
	
	//Operacao:
	//	id=ID;
	public OperacaoElements getOperacaoAccess() {
		return pOperacao;
	}
	
	public ParserRule getOperacaoRule() {
		return getOperacaoAccess().getRule();
	}
	
	//AssociacaoNome:
	//	id=ID;
	public AssociacaoNomeElements getAssociacaoNomeAccess() {
		return pAssociacaoNome;
	}
	
	public ParserRule getAssociacaoNomeRule() {
		return getAssociacaoNomeAccess().getRule();
	}
	
	//AtributoNome:
	//	id=ID;
	public AtributoNomeElements getAtributoNomeAccess() {
		return pAtributoNome;
	}
	
	public ParserRule getAtributoNomeRule() {
		return getAtributoNomeAccess().getRule();
	}
	
	//AtributoTipo:
	//	id=ID;
	public AtributoTipoElements getAtributoTipoAccess() {
		return pAtributoTipo;
	}
	
	public ParserRule getAtributoTipoRule() {
		return getAtributoTipoAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
