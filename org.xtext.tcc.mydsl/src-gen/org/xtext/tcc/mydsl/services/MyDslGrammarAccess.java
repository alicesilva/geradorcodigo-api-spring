/*
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Model");
		private final Assignment cGreetingsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cGreetingsGreetingParserRuleCall_0 = (RuleCall)cGreetingsAssignment.eContents().get(0);
		
		//Model:
		//	greetings+=Greeting*;
		@Override public ParserRule getRule() { return rule; }
		
		//greetings+=Greeting*
		public Assignment getGreetingsAssignment() { return cGreetingsAssignment; }
		
		//Greeting
		public RuleCall getGreetingsGreetingParserRuleCall_0() { return cGreetingsGreetingParserRuleCall_0; }
	}
	public class GreetingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Greeting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cApiAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cApiApiParserRuleCall_1_0 = (RuleCall)cApiAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Greeting:
		//	'{' api=Api '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' api=Api '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//api=Api
		public Assignment getApiAssignment_1() { return cApiAssignment_1; }
		
		//Api
		public RuleCall getApiApiParserRuleCall_1_0() { return cApiApiParserRuleCall_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class ApiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Api");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameApiAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameApiAPINameParserRuleCall_0_0 = (RuleCall)cNameApiAssignment_0.eContents().get(0);
		private final Keyword cColonLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_2_0 = (RuleCall)cAttributesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Api:
		//	nameApi=APIName ':{' attributes=Attribute '}';
		@Override public ParserRule getRule() { return rule; }
		
		//nameApi=APIName ':{' attributes=Attribute '}'
		public Group getGroup() { return cGroup; }
		
		//nameApi=APIName
		public Assignment getNameApiAssignment_0() { return cNameApiAssignment_0; }
		
		//APIName
		public RuleCall getNameApiAPINameParserRuleCall_0_0() { return cNameApiAPINameParserRuleCall_0_0; }
		
		//':{'
		public Keyword getColonLeftCurlyBracketKeyword_1() { return cColonLeftCurlyBracketKeyword_1; }
		
		//attributes=Attribute
		public Assignment getAttributesAssignment_2() { return cAttributesAssignment_2; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_2_0() { return cAttributesAttributeParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class APINameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.APIName");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//APIName:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAtributosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNomeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAttributeNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAttributeNameAttributeNameParserRuleCall_4_0 = (RuleCall)cAttributeNameAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTipoKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cAttributeTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAttributeTypeAttributeTypeParserRuleCall_7_0 = (RuleCall)cAttributeTypeAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cMetodoGetKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDecisionGetAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDecisionGetBoolParserRuleCall_10_0 = (RuleCall)cDecisionGetAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cMetodoSetKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cDecisionSetAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDecisionSetBoolParserRuleCall_13_0 = (RuleCall)cDecisionSetAssignment_13.eContents().get(0);
		private final Keyword cCommaKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cIdChavePrimariaKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDecisionIDAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDecisionIDBoolParserRuleCall_16_0 = (RuleCall)cDecisionIDAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cRightSquareBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//Attribute:
		//	'atributos:' '['
		//	'{'
		//	'nome:' attributeName=AttributeName ','
		//	'tipo:' attributeType=AttributeType ','
		//	'metodoGet:' decisionGet=Bool ','
		//	'metodoSet:' decisionSet=Bool ','
		//	'idChavePrimaria:' decisionID=Bool
		//	'}'
		//	']';
		@Override public ParserRule getRule() { return rule; }
		
		//'atributos:' '[' '{' 'nome:' attributeName=AttributeName ',' 'tipo:' attributeType=AttributeType ',' 'metodoGet:'
		//decisionGet=Bool ',' 'metodoSet:' decisionSet=Bool ',' 'idChavePrimaria:' decisionID=Bool '}' ']'
		public Group getGroup() { return cGroup; }
		
		//'atributos:'
		public Keyword getAtributosKeyword_0() { return cAtributosKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'nome:'
		public Keyword getNomeKeyword_3() { return cNomeKeyword_3; }
		
		//attributeName=AttributeName
		public Assignment getAttributeNameAssignment_4() { return cAttributeNameAssignment_4; }
		
		//AttributeName
		public RuleCall getAttributeNameAttributeNameParserRuleCall_4_0() { return cAttributeNameAttributeNameParserRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'tipo:'
		public Keyword getTipoKeyword_6() { return cTipoKeyword_6; }
		
		//attributeType=AttributeType
		public Assignment getAttributeTypeAssignment_7() { return cAttributeTypeAssignment_7; }
		
		//AttributeType
		public RuleCall getAttributeTypeAttributeTypeParserRuleCall_7_0() { return cAttributeTypeAttributeTypeParserRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//'metodoGet:'
		public Keyword getMetodoGetKeyword_9() { return cMetodoGetKeyword_9; }
		
		//decisionGet=Bool
		public Assignment getDecisionGetAssignment_10() { return cDecisionGetAssignment_10; }
		
		//Bool
		public RuleCall getDecisionGetBoolParserRuleCall_10_0() { return cDecisionGetBoolParserRuleCall_10_0; }
		
		//','
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }
		
		//'metodoSet:'
		public Keyword getMetodoSetKeyword_12() { return cMetodoSetKeyword_12; }
		
		//decisionSet=Bool
		public Assignment getDecisionSetAssignment_13() { return cDecisionSetAssignment_13; }
		
		//Bool
		public RuleCall getDecisionSetBoolParserRuleCall_13_0() { return cDecisionSetBoolParserRuleCall_13_0; }
		
		//','
		public Keyword getCommaKeyword_14() { return cCommaKeyword_14; }
		
		//'idChavePrimaria:'
		public Keyword getIdChavePrimariaKeyword_15() { return cIdChavePrimariaKeyword_15; }
		
		//decisionID=Bool
		public Assignment getDecisionIDAssignment_16() { return cDecisionIDAssignment_16; }
		
		//Bool
		public RuleCall getDecisionIDBoolParserRuleCall_16_0() { return cDecisionIDBoolParserRuleCall_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_18() { return cRightSquareBracketKeyword_18; }
	}
	public class AttributeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.AttributeName");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//AttributeName:
		//	id=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.AttributeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cTypeStringKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cTypeIntKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cTypeDoubleKeyword_2_0 = (Keyword)cTypeAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cTypeBooleanKeyword_3_0 = (Keyword)cTypeAssignment_3.eContents().get(0);
		
		//AttributeType:
		//	type='String' | type='Int' | type='Double' | type='Boolean';
		@Override public ParserRule getRule() { return rule; }
		
		//type='String' | type='Int' | type='Double' | type='Boolean'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//type='String'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'String'
		public Keyword getTypeStringKeyword_0_0() { return cTypeStringKeyword_0_0; }
		
		//type='Int'
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'Int'
		public Keyword getTypeIntKeyword_1_0() { return cTypeIntKeyword_1_0; }
		
		//type='Double'
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//'Double'
		public Keyword getTypeDoubleKeyword_2_0() { return cTypeDoubleKeyword_2_0; }
		
		//type='Boolean'
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//'Boolean'
		public Keyword getTypeBooleanKeyword_3_0() { return cTypeBooleanKeyword_3_0; }
	}
	public class BoolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tcc.mydsl.MyDsl.Bool");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDecisionAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cDecisionYesKeyword_0_0 = (Keyword)cDecisionAssignment_0.eContents().get(0);
		private final Assignment cDecisionAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cDecisionNoKeyword_1_0 = (Keyword)cDecisionAssignment_1.eContents().get(0);
		
		//Bool:
		//	decision='Yes' | decision='No';
		@Override public ParserRule getRule() { return rule; }
		
		//decision='Yes' | decision='No'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//decision='Yes'
		public Assignment getDecisionAssignment_0() { return cDecisionAssignment_0; }
		
		//'Yes'
		public Keyword getDecisionYesKeyword_0_0() { return cDecisionYesKeyword_0_0; }
		
		//decision='No'
		public Assignment getDecisionAssignment_1() { return cDecisionAssignment_1; }
		
		//'No'
		public Keyword getDecisionNoKeyword_1_0() { return cDecisionNoKeyword_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final GreetingElements pGreeting;
	private final ApiElements pApi;
	private final APINameElements pAPIName;
	private final AttributeElements pAttribute;
	private final AttributeNameElements pAttributeName;
	private final AttributeTypeElements pAttributeType;
	private final BoolElements pBool;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pGreeting = new GreetingElements();
		this.pApi = new ApiElements();
		this.pAPIName = new APINameElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeName = new AttributeNameElements();
		this.pAttributeType = new AttributeTypeElements();
		this.pBool = new BoolElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.tcc.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	greetings+=Greeting*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Greeting:
	//	'{' api=Api '}';
	public GreetingElements getGreetingAccess() {
		return pGreeting;
	}
	
	public ParserRule getGreetingRule() {
		return getGreetingAccess().getRule();
	}
	
	//Api:
	//	nameApi=APIName ':{' attributes=Attribute '}';
	public ApiElements getApiAccess() {
		return pApi;
	}
	
	public ParserRule getApiRule() {
		return getApiAccess().getRule();
	}
	
	//APIName:
	//	id=ID;
	public APINameElements getAPINameAccess() {
		return pAPIName;
	}
	
	public ParserRule getAPINameRule() {
		return getAPINameAccess().getRule();
	}
	
	//Attribute:
	//	'atributos:' '['
	//	'{'
	//	'nome:' attributeName=AttributeName ','
	//	'tipo:' attributeType=AttributeType ','
	//	'metodoGet:' decisionGet=Bool ','
	//	'metodoSet:' decisionSet=Bool ','
	//	'idChavePrimaria:' decisionID=Bool
	//	'}'
	//	']';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//AttributeName:
	//	id=ID;
	public AttributeNameElements getAttributeNameAccess() {
		return pAttributeName;
	}
	
	public ParserRule getAttributeNameRule() {
		return getAttributeNameAccess().getRule();
	}
	
	//AttributeType:
	//	type='String' | type='Int' | type='Double' | type='Boolean';
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//Bool:
	//	decision='Yes' | decision='No';
	public BoolElements getBoolAccess() {
		return pBool;
	}
	
	public ParserRule getBoolRule() {
		return getBoolAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
