/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.tcc.mydsl.myDsl.Atributo;
import org.xtext.tcc.mydsl.myDsl.Atributos;
import org.xtext.tcc.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Atributos</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.tcc.mydsl.myDsl.impl.AtributosImpl#getAtributo <em>Atributo</em>}</li>
 *   <li>{@link org.xtext.tcc.mydsl.myDsl.impl.AtributosImpl#getAtributoMais <em>Atributo Mais</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AtributosImpl extends MinimalEObjectImpl.Container implements Atributos
{
  /**
   * The cached value of the '{@link #getAtributo() <em>Atributo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtributo()
   * @generated
   * @ordered
   */
  protected Atributo atributo;

  /**
   * The cached value of the '{@link #getAtributoMais() <em>Atributo Mais</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtributoMais()
   * @generated
   * @ordered
   */
  protected EList<Atributo> atributoMais;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AtributosImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ATRIBUTOS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Atributo getAtributo()
  {
    return atributo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAtributo(Atributo newAtributo, NotificationChain msgs)
  {
    Atributo oldAtributo = atributo;
    atributo = newAtributo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ATRIBUTOS__ATRIBUTO, oldAtributo, newAtributo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAtributo(Atributo newAtributo)
  {
    if (newAtributo != atributo)
    {
      NotificationChain msgs = null;
      if (atributo != null)
        msgs = ((InternalEObject)atributo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ATRIBUTOS__ATRIBUTO, null, msgs);
      if (newAtributo != null)
        msgs = ((InternalEObject)newAtributo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ATRIBUTOS__ATRIBUTO, null, msgs);
      msgs = basicSetAtributo(newAtributo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ATRIBUTOS__ATRIBUTO, newAtributo, newAtributo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Atributo> getAtributoMais()
  {
    if (atributoMais == null)
    {
      atributoMais = new EObjectContainmentEList<Atributo>(Atributo.class, this, MyDslPackage.ATRIBUTOS__ATRIBUTO_MAIS);
    }
    return atributoMais;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ATRIBUTOS__ATRIBUTO:
        return basicSetAtributo(null, msgs);
      case MyDslPackage.ATRIBUTOS__ATRIBUTO_MAIS:
        return ((InternalEList<?>)getAtributoMais()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ATRIBUTOS__ATRIBUTO:
        return getAtributo();
      case MyDslPackage.ATRIBUTOS__ATRIBUTO_MAIS:
        return getAtributoMais();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ATRIBUTOS__ATRIBUTO:
        setAtributo((Atributo)newValue);
        return;
      case MyDslPackage.ATRIBUTOS__ATRIBUTO_MAIS:
        getAtributoMais().clear();
        getAtributoMais().addAll((Collection<? extends Atributo>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ATRIBUTOS__ATRIBUTO:
        setAtributo((Atributo)null);
        return;
      case MyDslPackage.ATRIBUTOS__ATRIBUTO_MAIS:
        getAtributoMais().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ATRIBUTOS__ATRIBUTO:
        return atributo != null;
      case MyDslPackage.ATRIBUTOS__ATRIBUTO_MAIS:
        return atributoMais != null && !atributoMais.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //AtributosImpl
