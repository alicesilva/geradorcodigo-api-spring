/*
 * generated by Xtext 2.18.0.M3
 */
grammar DebugInternalMyDsl;

// Rule Model
ruleModel:
	ruleGreeting
;

// Rule Greeting
ruleGreeting:
	'{'
	ruleApi
	'}'
;

// Rule Api
ruleApi:
	'"Nome da Api"'
	':'
	ruleApiNome
	','
	'"Entidades"'
	':'
	'['
	ruleEntidades
	']'
;

// Rule ApiNome
ruleApiNome:
	RULE_STRING_LIT
;

// Rule Entidades
ruleEntidades:
	ruleEntidade
	(
		','
		ruleEntidade
	)*
;

// Rule Entidade
ruleEntidade:
	'{'
	'"Nome"'
	':'
	ruleNome
	','
	'"Atributos"'
	':'
	'['
	ruleAtributos
	']'
	','
	'"Nome do pacote"'
	':'
	ruleNome
	'}'
;

// Rule Nome
ruleNome:
	RULE_STRING_LIT
;

// Rule Atributos
ruleAtributos:
	ruleAtributo
	(
		','
		ruleAtributo
	)*
;

// Rule Atributo
ruleAtributo:
	'{'
	'"nome-atributo"'
	':'
	ruleNome
	','
	'"tipo-atributo"'
	':'
	ruleAtributoTipo
	','
	'"associa\u00E7\u00E3o/relacionamento"'
	':'
	ruleAssociacao
	','
	'"opera\u00E7\u00E3o em cascata"'
	':'
	'['
	ruleOperacao
	?
	']'
	'}'
;

// Rule Operacao
ruleOperacao:
	ruleOperacaoCascada
	(
		','
		ruleOperacaoCascada
	)*
;

// Rule OperacaoCascada
ruleOperacaoCascada:
	RULE_NOME_OPERACAO
;

// Rule Associacao
ruleAssociacao:
	RULE_NOME_ASSOCIACAO
;

// Rule AtributoTipo
ruleAtributoTipo:
	(
		RULE_TIPO_PRIMITIVO
		    |
		RULE_TIPO_COLECAO
		    |
		RULE_STRING_LIT
	)
;

RULE_NOME_ASSOCIACAO : '"' ('OneToOne'|'OneToMany'|'ManyToOne'|'ManyToMany'|'None-Associacao')? '"';

RULE_NOME_OPERACAO : '"' ('ALL'|'DETACH'|'MERGE'|'PERSIST'|'REFRESH'|'REMOVE'|'None-Operacao') '"';

RULE_TIPO_PRIMITIVO : '"' ('Boolean'|'Integer'|'Long'|'String'|'Float'|'Double'|'Time'|'Timestamp'|'Date'|'ENUM') '"';

RULE_TIPO_COLECAO : '"' ('List<' RULE_STRING_I '>'|'Set<' RULE_STRING_I '>'|'ArrayList<' RULE_STRING_I '>'|'HashSet<' RULE_STRING_I '>') '"';

RULE_STRING_LIT : '"' RULE_LETRA+ '"';

fragment RULE_STRING_I : RULE_LETRA+;

fragment RULE_LETRA : ('a'..'z'|'A'..'Z');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/' {skip();};

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')? {skip();};

RULE_WS : (' '|'\t'|'\r'|'\n')+ {skip();};

RULE_ANY_OTHER : .;
