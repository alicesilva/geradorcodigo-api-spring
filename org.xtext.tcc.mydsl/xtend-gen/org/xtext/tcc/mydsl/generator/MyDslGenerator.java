/**
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.tcc.mydsl.generator;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.xtext.tcc.mydsl.myDsl.Associacao;
import org.xtext.tcc.mydsl.myDsl.Atributo;
import org.xtext.tcc.mydsl.myDsl.Operacao;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
  }
  
  public CharSequence compileAtributos(final String chavePrimaria, final EList<Atributo> atributos) {
    StringConcatenation _builder = new StringConcatenation();
    {
      for(final Atributo a : atributos) {
        {
          Associacao _associacao = a.getAssociacao();
          boolean _tripleNotEquals = (_associacao != null);
          if (_tripleNotEquals) {
            {
              Operacao _operacao = a.getOperacao();
              boolean _tripleEquals = (_operacao == null);
              if (_tripleEquals) {
                _builder.append("@");
                String _associacao_1 = a.getAssociacao().getAssociacao();
                _builder.append(_associacao_1);
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("@");
                String _associacao_2 = a.getAssociacao().getAssociacao();
                _builder.append(_associacao_2);
                _builder.append("(cascade = CascadeType.");
                String _opCascada = a.getOperacao().getOpCascada();
                _builder.append(_opCascada);
                _builder.append(")");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          String _tipoP = a.getAtributoTipo().getTipoP();
          boolean _tripleNotEquals_1 = (_tipoP != null);
          if (_tripleNotEquals_1) {
            _builder.append("private ");
            String _firstUpper = StringExtensions.toFirstUpper(a.getAtributoTipo().getTipoP());
            _builder.append(_firstUpper);
            _builder.append(" ");
            String _firstLower = StringExtensions.toFirstLower(a.getAtributoNome().getId());
            _builder.append(_firstLower);
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("private ");
            String _firstUpper_1 = StringExtensions.toFirstUpper(a.getAtributoTipo().getTipoE());
            _builder.append(_firstUpper_1);
            _builder.append(" ");
            String _firstLower_1 = StringExtensions.toFirstLower(a.getAtributoNome().getId());
            _builder.append(_firstLower_1);
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  public CharSequence compileGetersSeters(final EList<Atributo> atributos) {
    StringConcatenation _builder = new StringConcatenation();
    {
      for(final Atributo a : atributos) {
        {
          String _tipoP = a.getAtributoTipo().getTipoP();
          boolean _tripleNotEquals = (_tipoP != null);
          if (_tripleNotEquals) {
            _builder.append("public ");
            String _tipoP_1 = a.getAtributoTipo().getTipoP();
            _builder.append(_tipoP_1);
            _builder.append(" get");
            String _firstUpper = StringExtensions.toFirstUpper(a.getAtributoNome().getId());
            _builder.append(_firstUpper);
            _builder.append("(){");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("return ");
            String _id = a.getAtributoNome().getId();
            _builder.append(_id, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
            _builder.newLine();
            _builder.append("public void set");
            String _firstUpper_1 = StringExtensions.toFirstUpper(a.getAtributoNome().getId());
            _builder.append(_firstUpper_1);
            _builder.append("(");
            String _tipoP_2 = a.getAtributoTipo().getTipoP();
            _builder.append(_tipoP_2);
            _builder.append(" ");
            String _id_1 = a.getAtributoNome().getId();
            _builder.append(_id_1);
            _builder.append("){");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("this.");
            String _id_2 = a.getAtributoNome().getId();
            _builder.append(_id_2, "\t");
            _builder.append(" = ");
            String _id_3 = a.getAtributoNome().getId();
            _builder.append(_id_3, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("public ");
            String _tipoE = a.getAtributoTipo().getTipoE();
            _builder.append(_tipoE);
            _builder.append(" get");
            String _firstUpper_2 = StringExtensions.toFirstUpper(a.getAtributoNome().getId());
            _builder.append(_firstUpper_2);
            _builder.append("(){");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("return ");
            String _id_4 = a.getAtributoNome().getId();
            _builder.append(_id_4, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
            _builder.newLine();
            _builder.append("public void set ");
            String _firstUpper_3 = StringExtensions.toFirstUpper(a.getAtributoNome().getId());
            _builder.append(_firstUpper_3);
            _builder.append("(");
            String _tipoP_3 = a.getAtributoTipo().getTipoP();
            _builder.append(_tipoP_3);
            _builder.append(" ");
            String _id_5 = a.getAtributoNome().getId();
            _builder.append(_id_5);
            _builder.append("){");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("this.");
            String _id_6 = a.getAtributoNome().getId();
            _builder.append(_id_6, "\t");
            _builder.append(" = ");
            String _id_7 = a.getAtributoNome().getId();
            _builder.append(_id_7, "\t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    return _builder;
  }
}
